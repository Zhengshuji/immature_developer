This is a program that can be used to read line charts and predict data trends. Among them, main.py is the main file, and the remaining modules are placed in the .env and myscripts folders.

During runtime, the path can be changed. The default path is the origin_file folder in the Data folder, and the program will automatically search for the 1.jpg file within it during runtime. In addition, the results generated by the program are located in the output folder. If the program runs correctly, it will generate cropped images, binary images, data tables, predicted data, and other content.

Here is an explanation of the modules:
function_uesd， Abstracting most functions makes the main file look very concise.
TimeGpt， This is the code for time series prediction based on the open-source time series prediction model TimeGpt.
data_deal， This is a module for data processing, mainly used for data format processing. For time, it will automatically calculate the number of days from 1900-1-1 or the number of seconds from 00:00:00, or both.
get_data， It can be used to obtain image data. The image refers to a processed binary image. After inputting the information of the independent variable, it will calculate the variable value based on the pixel situation.
GraphProgress, img-prop, and histogram_match are image processing modules in which OpenCV is used. The first two are mainly basic image operations and some convenient methods provided by OpenCV, while the latter is mainly for histogram processing.
OCR， It is a character recognition module, using Baidu's API tool here.
output， This is the output module, mainly used for drawing.
select_the_element， This module is mainly used for manual cropping of images for subsequent processing.

Although the basic functionality can be achieved, there are still these issues:
1. The overall operation is not very convenient, and the parts that require manual operation are too cumbersome and inaccurate;
2. Many built-in variables are difficult to modify externally, such as the SDK of AI tools used by the program.
3. Modularization is relatively chaotic, and overall maintenance and optimization are difficult;
4. There are still many issues with the program during execution, including but not limited to boundary interference, data interpolation, and other aspects, resulting in significant deviations in actual results.
5. It can only deal with limited simple images.

Here is the procedure:
1. The figure is selected
2. The elements in figure are selected, the x and y coordinates are picked up and the pure line are read as line_figure.
3. The x and y coordinates are read and processed to get the information as x_info and y_info.
4. The line_figure is processed and a clear binary image is obtained.
5. Applying the information of x and y to the binary image, each pixel can obtain a real data value and then be stored.
6. Next, the TimeGpt will make prediction based on the data.
7. All the caculated value and predicted value will be drawn in one figure.
